// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output   = "../src/shared/prismagraphql"
  reExport = Directories
}

generator client {
  provider = "prisma-client-js"
}

enum Operation {
  list
  get
  create
  update
  delete
  search
  onCreate
  onUpdate
  onDelete
}

enum RentDuration {
  HOUR
  DAY
  MONTH
  YEAR
}

model User {
  id            String         @id @default(uuid()) @db.Uuid
  name          String
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
}

model Product {
  id            String             @id @default(uuid())
  title         String
  description   String?
  price         Int
  rentPrice     Int?
  rentDuration  RentDuration
  categories    ProductCategory[]
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model Category {
  id            String             @id @default(uuid())
  name          String             @unique
  products      ProductCategory[]
}

model ProductCategory {
  product       Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId     String
  category      Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    String

  @@id([productId, categoryId])
}